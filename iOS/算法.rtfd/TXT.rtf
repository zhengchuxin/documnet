{\rtf1\ansi\ansicpg936\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset134 PingFangSC-Semibold;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fnil\fcharset0 HelveticaNeue-Bold;
\f3\fnil\fcharset0 HelveticaNeue;\f4\fnil\fcharset0 Monaco;\f5\froman\fcharset0 Times-Roman;
\f6\froman\fcharset0 Times-Bold;\f7\fnil\fcharset134 STSongti-SC-Bold;\f8\fnil\fcharset134 STSongti-SC-Regular;
}
{\colortbl;\red255\green255\blue255;\red251\green2\blue7;\red255\green255\blue255;\red38\green38\blue38;
\red20\green20\blue20;\red0\green0\blue0;\red0\green0\blue0;\red49\green49\blue49;\red251\green2\blue7;
\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c100000\c14913\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c20000\c20000\c20000;
\cssrgb\c10196\c10196\c10196;\cssrgb\c0\c0\c0;\csgray\c0\c0;\cssrgb\c25098\c25098\c25098;\cssrgb\c100000\c14913\c0;
\csgray\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww20100\viewh18200\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
1
\f1\b0 \cf2 \'a1\'a2
\f0\b \cf2 \'c7\'eb\'d4\'da
\f2 1000
\f0 \'cd\'f2\'b8\'f6\'d5\'fb\'d0\'cd\'ca\'fd\'be\'dd\'d6\'d0\'d2\'d4\'d7\'ee\'bf\'ec\'b5\'c4\'cb\'d9\'b6\'c8\'d5\'d2\'b3\'f6\'c6\'e4\'d6\'d0\'d7\'ee\'b4\'f3\'b5\'c4
\f2 1000
\f0 \'b8\'f6\'ca\'fd\'a3\'bf
\fs32 \cf4 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs30 \cf4   \'b0\'d1
\f3 1000
\f1 \'cd\'f2\'b5\'c4\'d5\'fb\'d0\'cd\'c6\'bd\'be\'f9\'b7\'d6\'b5\'bd\'ba\'cf\'ca\'ca
\f3 n
\f1 \'b8\'f6\'ce\'c4\'bc\'fe\'d6\'d0\'a3\'ac\'b7\'d6\'b1\'f0\'b6\'d4\'c3\'bf\'d2\'bb\'b7\'dd\'ce\'c4\'bc\'fe\'d5\'d2\'b3\'f6\'c7\'b0
\f3 1000
\f1 \'b8\'f6\'d7\'ee\'b4\'f3\'b5\'c4\'ca\'fd\'a3\'ac\'d7\'ee\'ba\'f3\'b6\'d4\'c3\'bf\'b7\'dd\'ce\'c4\'bc\'fe\'c7\'b0
\f3 1000
\f1 \'ca\'fd\'be\'dd\'d3\'c3\'b3\'a3\'b9\'e6\'cb\'e3\'b7\'a8\'ba\'cf\'b2\'a2\'bc\'b4\'bf\'c9
\f3\fs32 \cf5 \cb1 \

\f1\fs30 \cf4 \cb3   \'c4\'c7\'c3\'b4\'a3\'ac\'c8\'e7\'ba\'ce\'b4\'d3\'c3\'bf\'d2\'bb\'b7\'dd\'ce\'c4\'bc\'fe\'d6\'d0\'d5\'d2\'b3\'f6\'c7\'b0
\f3 1000
\f1 \'b8\'f6\'d7\'ee\'b4\'f3\'b5\'c4\'ca\'fd\'c4\'d8\'a3\'bf
\f3 \cb1 \

\f1 \cb3   \'cf\'c8\'c8\'a1\'ce\'c4\'bc\'fe\'d6\'d0\'c7\'b0
\f3 1000
\f1 \'b8\'f6\'ca\'fd\'b7\'c5\'b5\'bd\'ca\'fd\'d7\'e9\'d6\'d0\'a3\'ac\'b2\'a2\'c5\'c5\'ba\'c3\'d0\'f2\'a3\'a8\'bc\'d9\'c9\'e8\'c9\'fd\'d0\'f2\'a3\'a9\'a3\'ac\'d6\'ae\'ba\'f3\'b4\'d3\'ce\'c4\'bc\'fe\'d6\'d0\'b6\'c1\'c8\'a1\'cf\'c2\'d2\'bb\'b8\'f6\'ca\'fd\'d3\'eb\'ca\'fd\'d7\'e9\'b5\'da\'d2\'bb\'b8\'f6\'ca\'fd\'b1\'c8\'bd\'cf\'a3\'ac\'c8\'e7\'b9\'fb\'b1\'c8\'ca\'fd\'d7\'e9\'d6\'d0\'b5\'da\'d2\'bb\'b8\'f6\'ca\'fd\'b4\'f3\'a3\'ac  \'d4\'f2\'cc\'e6\'bb\'bb\'ca\'fd\'d7\'e9\'b5\'da\'d2\'bb\'b8\'f6\'ca\'fd\'a3\'ac\'b2\'a2\'d6\'d8\'d0\'c2\'c5\'c5\'d0\'f2\'a3\'ac\'d6\'ae\'ba\'f3\'d4\'d9\'c8\'a1\'cf\'c2\'d2\'bb\'b8\'f6\'ca\'fd\'bd\'f8\'d0\'d0\'cf\'c2\'c2\'d6\'b1\'c8\'bd\'cf\'bc\'b4\'bf\'c9\'a1\'a3\
\
\pard\pardeftab720\partightenfactor0

\f2\b\fs28 \cf2 2
\f0 \'a1\'a2
\f1\b0 \cf2 \'b2\'bb\'d3\'c3\'d6\'d0\'bc\'e4\'b1\'e4\'c1\'bf
\f3 \cf2 ,
\f1 \cf2 \'d3\'c3\'c1\'bd\'d6\'d6\'b7\'bd\'b7\'a8\'bd\'bb\'bb\'bb
\f3 \cf2 A
\f1 \cf2 \'ba\'cd
\f3 \cf2 B
\f1 \cf2 \'b5\'c4\'d6\'b5
\f3\fs32 \cf5 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf6 \cb7 // 1.
\f1 \'d6\'d0\'bc\'e4\'b1\'e4\'c1\'bf
\f4 \
void swap(int a, int b) \{\
   int temp = a;\
   a = b;\
   b = temp;\
\}\
\
// 2.
\f1 \'bc\'d3\'b7\'a8
\f4 \
void swap(int a, int b) \{\
   a = a + b;\
   b = a - b;\
   a = a - b;\
\}\
\
// 3.
\f1 \'d2\'ec\'bb\'f2\'a3\'a8\'cf\'e0\'cd\'ac\'ce\'aa
\f4 0
\f1 \'a3\'ac\'b2\'bb\'cd\'ac\'ce\'aa
\f4 1. 
\f1 \'bf\'c9\'d2\'d4\'c0\'ed\'bd\'e2\'ce\'aa\'b2\'bb\'bd\'f8\'ce\'bb\'bc\'d3\'b7\'a8\'a3\'a9
\f4 \
void swap(int a, int b) \{\
   a = a ^ b;\
   b = a ^ b;\
   a = a ^ b;\
\}\
\uc0\u8203 ```\
\pard\pardeftab720\partightenfactor0

\f3\fs32 \cf5 \cb3 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf2 3
\f0\b \'a1\'a2
\f1\b0 \cf2 \'c7\'f3\'d7\'ee\'b4\'f3\'b9\'ab\'d4\'bc\'ca\'fd
\f3\fs32 \cf5 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf6 \cb7 /** 1.
\f1 \'d6\'b1\'bd\'d3\'b1\'e9\'c0\'fa\'b7\'a8
\f4  */\
int maxCommonDivisor(int a, int b) \{\
    int max = 0;\
    for (int i = 1; i <=b; i++) \{\
        if (a % i == 0 && b % i == 0) \{\
            max = i;\
        \}\
    \}\
    return max;\
\}\
/** 2.
\f1 \'d5\'b7\'d7\'aa\'cf\'e0\'b3\'fd\'b7\'a8
\f4  */\
int maxCommonDivisor(int a, int b) \{\
    int r;\
    while(a % b > 0) \{\
        r = a % b;\
        a = b;\
        b = r;\
    \}\
    return b;\
\}\
\
// 
\f1 \'c0\'a9\'d5\'b9\'a3\'ba\'d7\'ee\'d0\'a1\'b9\'ab\'b1\'b6\'ca\'fd
\f4  = (a * b)/
\f1 \'d7\'ee\'b4\'f3\'b9\'ab\'d4\'bc\'ca\'fd
\f3\fs32 \cf5 \cb3 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf2 4 
\f0\b \'a1\'a2
\f1\b0 \cf2 \'d1\'a1\'d4\'f1\'c5\'c5\'d0\'f2\'a1\'a2\'c3\'b0\'c5\'dd\'c5\'c5\'d0\'f2\'a1\'a2\'b2\'e5\'c8\'eb\'c5\'c5\'d0\'f2\'c8\'fd\'d6\'d6\'c5\'c5\'d0\'f2\'cb\'e3\'b7\'a8\'bf\'c9\'d2\'d4\'d7\'dc\'bd\'e1\'ce\'aa\'c8\'e7\'cf\'c2\'a3\'ba
\fs32 \cf8 \
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf2 \cb7 1. 
\f1 \'d1\'a1\'d4\'f1\'c5\'c5\'d0\'f2\'bd\'ab\'d2\'d1\'c5\'c5\'d0\'f2\'b2\'bf\'b7\'d6\'b6\'a8\'d2\'e5\'d4\'da\'d7\'f3\'b6\'cb\'a3\'ac\'c8\'bb\'ba\'f3\'d1\'a1\'d4\'f1\'ce\'b4\'c5\'c5\'d0\'f2\'b2\'bf\'b7\'d6\'b5\'c4\'d7\'ee\'d0\'a1\'d4\'aa\'cb\'d8\'ba\'cd\'ce\'b4\'c5\'c5\'d0\'f2\'b2\'bf\'b7\'d6\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'bd\'bb\'bb\'bb\'a1\'a3
\f4 \cf6 \
/**  \
*  
\f1 \'a1\'be\'d1\'a1\'d4\'f1\'c5\'c5\'d0\'f2\'a1\'bf\'a3\'ba\'d7\'ee\'d6\'b5\'b3\'f6\'cf\'d6\'d4\'da\'c6\'f0\'ca\'bc\'b6\'cb
\f4 \
 *  \
 *  
\f1 \'b5\'da
\f4 1
\f1 \'cc\'cb\'a3\'ba\'d4\'da
\f4 n
\f1 \'b8\'f6\'ca\'fd\'d6\'d0\'d5\'d2\'b5\'bd\'d7\'ee\'d0\'a1
\f4 (
\f1 \'b4\'f3
\f4 )
\f1 \'ca\'fd\'d3\'eb\'b5\'da\'d2\'bb\'b8\'f6\'ca\'fd\'bd\'bb\'bb\'bb\'ce\'bb\'d6\'c3
\f4 \
 *  
\f1 \'b5\'da
\f4 2
\f1 \'cc\'cb\'a3\'ba\'d4\'da\'ca\'a3\'cf\'c2
\f4 n-1
\f1 \'b8\'f6\'ca\'fd\'d6\'d0\'d5\'d2\'b5\'bd\'d7\'ee\'d0\'a1
\f4 (
\f1 \'b4\'f3
\f4 )
\f1 \'ca\'fd\'d3\'eb\'b5\'da\'b6\'fe\'b8\'f6\'ca\'fd\'bd\'bb\'bb\'bb\'ce\'bb\'d6\'c3
\f4 \
 *  
\f1 \'d6\'d8\'b8\'b4\'d5\'e2\'d1\'f9\'b5\'c4\'b2\'d9\'d7\'f7
\f4 ...
\f1 \'d2\'c0\'b4\'ce\'d3\'eb\'b5\'da\'c8\'fd\'b8\'f6\'a1\'a2\'b5\'da\'cb\'c4\'b8\'f6
\f4 ...
\f1 \'ca\'fd\'bd\'bb\'bb\'bb\'ce\'bb\'d6\'c3
\f4 \
 *  
\f1 \'b5\'da
\f4 n-1
\f1 \'cc\'cb\'a3\'ac\'d7\'ee\'d6\'d5\'bf\'c9\'ca\'b5\'cf\'d6\'ca\'fd\'be\'dd\'b5\'c4\'c9\'fd\'d0\'f2\'a3\'a8\'bd\'b5\'d0\'f2\'a3\'a9\'c5\'c5\'c1\'d0\'a1\'a3
\f4 \
 *\
 */\
void selectSort(int *arr, int length) \{\
    for (int i = 0; i < length - 1; i++) \{ //
\f1 \'cc\'cb\'ca\'fd
\f4 \
        for (int j = i + 1; j < length; j++) \{ //
\f1 \'b1\'c8\'bd\'cf\'b4\'ce\'ca\'fd
\f4 \
            if (arr[i] > arr[j]) \{\
                int temp = arr[i];\
                arr[i] = arr[j];\
                arr[j] = temp;\
            \}\
        \}\
    \}\
\}\
\
\cf2 2. 
\f1 \'c3\'b0\'c5\'dd\'c5\'c5\'d0\'f2\'bd\'ab\'d2\'d1\'c5\'c5\'d0\'f2\'b2\'bf\'b7\'d6\'b6\'a8\'d2\'e5\'d4\'da\'d3\'d2\'b6\'cb\'a3\'ac\'d4\'da\'b1\'e9\'c0\'fa\'ce\'b4\'c5\'c5\'d0\'f2\'b2\'bf\'b7\'d6\'b5\'c4\'b9\'fd\'b3\'cc\'d6\'b4\'d0\'d0\'bd\'bb\'bb\'bb\'a3\'ac\'bd\'ab\'d7\'ee\'b4\'f3\'d4\'aa\'cb\'d8\'bd\'bb\'bb\'bb\'b5\'bd\'d7\'ee\'d3\'d2\'b6\'cb\'a1\'a3
\f4 \cf6 \
/** \
 *  
\f1 \'a1\'be\'c3\'b0\'c5\'dd\'c5\'c5\'d0\'f2\'a1\'bf\'a3\'ba\'cf\'e0\'c1\'da\'d4\'aa\'cb\'d8\'c1\'bd\'c1\'bd\'b1\'c8\'bd\'cf\'a3\'ac\'b1\'c8\'bd\'cf\'cd\'ea\'d2\'bb\'cc\'cb\'a3\'ac\'d7\'ee\'d6\'b5\'b3\'f6\'cf\'d6\'d4\'da\'c4\'a9\'ce\'b2
\f4 \
 *  
\f1 \'b5\'da
\f4 1
\f1 \'cc\'cb\'a3\'ba\'d2\'c0\'b4\'ce\'b1\'c8\'bd\'cf\'cf\'e0\'c1\'da\'b5\'c4\'c1\'bd\'b8\'f6\'ca\'fd\'a3\'ac\'b2\'bb\'b6\'cf\'bd\'bb\'bb\'bb\'a3\'a8\'d0\'a1\'ca\'fd\'b7\'c5\'c7\'b0\'a3\'ac\'b4\'f3\'ca\'fd\'b7\'c5\'ba\'f3\'a3\'a9\'d6\'f0\'b8\'f6\'cd\'c6\'bd\'f8\'a3\'ac\'d7\'ee\'d6\'b5\'d7\'ee\'ba\'f3\'b3\'f6\'cf\'d6\'d4\'da\'b5\'da
\f4 n
\f1 \'b8\'f6\'d4\'aa\'cb\'d8\'ce\'bb\'d6\'c3
\f4 \
 *  
\f1 \'b5\'da
\f4 2
\f1 \'cc\'cb\'a3\'ba\'d2\'c0\'b4\'ce\'b1\'c8\'bd\'cf\'cf\'e0\'c1\'da\'b5\'c4\'c1\'bd\'b8\'f6\'ca\'fd\'a3\'ac\'b2\'bb\'b6\'cf\'bd\'bb\'bb\'bb\'a3\'a8\'d0\'a1\'ca\'fd\'b7\'c5\'c7\'b0\'a3\'ac\'b4\'f3\'ca\'fd\'b7\'c5\'ba\'f3\'a3\'a9\'d6\'f0\'b8\'f6\'cd\'c6\'bd\'f8\'a3\'ac\'d7\'ee\'d6\'b5\'d7\'ee\'ba\'f3\'b3\'f6\'cf\'d6\'d4\'da\'b5\'da
\f4 n-1
\f1 \'b8\'f6\'d4\'aa\'cb\'d8\'ce\'bb\'d6\'c3
\f4 \
 *   \'85\'85   \'85\'85\
 *  
\f1 \'b5\'da
\f4 n-1
\f1 \'cc\'cb\'a3\'ba\'d2\'c0\'b4\'ce\'b1\'c8\'bd\'cf\'cf\'e0\'c1\'da\'b5\'c4\'c1\'bd\'b8\'f6\'ca\'fd\'a3\'ac\'b2\'bb\'b6\'cf\'bd\'bb\'bb\'bb\'a3\'a8\'d0\'a1\'ca\'fd\'b7\'c5\'c7\'b0\'a3\'ac\'b4\'f3\'ca\'fd\'b7\'c5\'ba\'f3\'a3\'a9\'d6\'f0\'b8\'f6\'cd\'c6\'bd\'f8\'a3\'ac\'d7\'ee\'d6\'b5\'d7\'ee\'ba\'f3\'b3\'f6\'cf\'d6\'d4\'da\'b5\'da
\f4 2
\f1 \'b8\'f6\'d4\'aa\'cb\'d8\'ce\'bb\'d6\'c3
\f4  \
 */\
void bublleSort(int *arr, int length) \{\
    for(int i = 0; i < length - 1; i++) \{ //
\f1 \'cc\'cb\'ca\'fd
\f4 \
        for(int j = 0; j < length - i - 1; j++) \{ //
\f1 \'b1\'c8\'bd\'cf\'b4\'ce\'ca\'fd
\f4 \
            if(arr[j] > arr[j+1]) \{\
                int temp = arr[j];\
                arr[j] = arr[j+1];\
                arr[j+1] = temp;\
            \}\
        \} \
    \}\
\cf2 \
3. 
\f1 \'b2\'e5\'c8\'eb\'c5\'c5\'d0\'f2\'bd\'ab\'d2\'d1\'c5\'c5\'d0\'f2\'b2\'bf\'b7\'d6\'b6\'a8\'d2\'e5\'d4\'da\'d7\'f3\'b6\'cb\'a3\'ac\'bd\'ab\'ce\'b4\'c5\'c5\'d0\'f2\'b2\'bf\'b7\'d6\'d4\'aa\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'b2\'e5\'c8\'eb\'b5\'bd\'d2\'d1\'c5\'c5\'d0\'f2\'b2\'bf\'b7\'d6\'ba\'cf\'ca\'ca\'b5\'c4\'ce\'bb\'d6\'c3
\f4 \cf6 \
/**\
\
 *  
\f1 \'d5\'db\'b0\'eb\'b2\'e9\'d5\'d2\'a3\'ba\'d3\'c5\'bb\'af\'b2\'e9\'d5\'d2\'ca\'b1\'bc\'e4\'a3\'a8\'b2\'bb\'d3\'c3\'b1\'e9\'c0\'fa\'c8\'ab\'b2\'bf\'ca\'fd\'be\'dd\'a3\'a9
\f4 \
 *\
 *  
\f1 \'d5\'db\'b0\'eb\'b2\'e9\'d5\'d2\'b5\'c4\'d4\'ad\'c0\'ed\'a3\'ba
\f4 \
 *   1> 
\f1 \'ca\'fd\'d7\'e9\'b1\'d8\'d0\'eb\'ca\'c7\'d3\'d0\'d0\'f2\'b5\'c4
\f4 \
 *   2> 
\f1 \'b1\'d8\'d0\'eb\'d2\'d1\'d6\'aa
\f4 min
\f1 \'ba\'cd
\f4 max
\f1 \'a3\'a8\'d6\'aa\'b5\'c0\'b7\'b6\'ce\'a7\'a3\'a9
\f4 \
 *   3> 
\f1 \'b6\'af\'cc\'ac\'bc\'c6\'cb\'e3
\f4 mid
\f1 \'b5\'c4\'d6\'b5\'a3\'ac\'c8\'a1\'b3\'f6
\f4 mid
\f1 \'b6\'d4\'d3\'a6\'b5\'c4\'d6\'b5\'bd\'f8\'d0\'d0\'b1\'c8\'bd\'cf
\f4 \
 *   4> 
\f1 \'c8\'e7\'b9\'fb
\f4 mid
\f1 \'b6\'d4\'d3\'a6\'b5\'c4\'d6\'b5\'b4\'f3\'d3\'da\'d2\'aa\'b2\'e9\'d5\'d2\'b5\'c4\'d6\'b5\'a3\'ac\'c4\'c7\'c3\'b4
\f4 max
\f1 \'d2\'aa\'b1\'e4\'d0\'a1\'ce\'aa
\f4 mid-1\
 *   5> 
\f1 \'c8\'e7\'b9\'fb
\f4 mid
\f1 \'b6\'d4\'d3\'a6\'b5\'c4\'d6\'b5\'d0\'a1\'d3\'da\'d2\'aa\'b2\'e9\'d5\'d2\'b5\'c4\'d6\'b5\'a3\'ac\'c4\'c7\'c3\'b4
\f4 min
\f1 \'d2\'aa\'b1\'e4\'b4\'f3\'ce\'aa
\f4 mid+1\
 *\
 */ \
\
// 
\f1 \'d2\'d1\'d6\'aa\'d2\'bb\'b8\'f6\'d3\'d0\'d0\'f2\'ca\'fd\'d7\'e9
\f4 , 
\f1 \'ba\'cd\'d2\'bb\'b8\'f6
\f4 key, 
\f1 \'d2\'aa\'c7\'f3\'b4\'d3\'ca\'fd\'d7\'e9\'d6\'d0\'d5\'d2\'b5\'bd
\f4 key
\f1 \'b6\'d4\'d3\'a6\'b5\'c4\'cb\'f7\'d2\'fd\'ce\'bb\'d6\'c3
\f4  \
int findKey(int *arr, int length, int key) \{\
    int min = 0, max = length - 1, mid;\
    while (min <= max) \{\
        mid = (min + max) / 2; //
\f1 \'bc\'c6\'cb\'e3\'d6\'d0\'bc\'e4\'d6\'b5
\f4 \
        if (key > arr[mid]) \{\
            min = mid + 1;\
        \} else if (key < arr[mid]) \{\
            max = mid - 1;\
        \} else \{\
            return mid;\
        \}\
    \}\
    return -1;\
\}\
\
\uc0\u8203 ```\
\pard\pardeftab720\partightenfactor0

\f2\b\fs28 \cf9 \cb3 5
\f0 \'a1\'a2\'cb\'e3\'b7\'a8\'b1\'e0\'b3\'cc\'c3\'e6\'ca\'d4\'cc\'e2
\f5\b0 \cf6 \cb1 \

\f2\b \cf4 \cb3 1. 
\f0 \'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6\'b5\'a5\'cf\'f2\'c1\'b4\'b1\'ed\'ca\'c7\'b7\'f1\'d3\'d0\'bb\'b7\'a3\'bf
\f2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\b0 \cf4 \cb3 1.
\f1 \'bf\'ec\'c2\'fd\'cb\'ab\'d6\'b8\'d5\'eb\'b7\'a8\'a3\'ac\'bf\'ec\'d6\'b8\'d5\'eb\'d2\'bb\'b4\'ce\'d7\'df\'c1\'bd\'b2\'bd\'a3\'ac\'c2\'fd\'d6\'b8\'d5\'eb\'d2\'bb\'b4\'ce\'d7\'df\'d2\'bb\'b2\'bd\'a3\'ac\'c8\'e7\'b9\'fb\'d3\'d0\'bb\'b7\'b1\'d8\'bb\'e1\'cf\'e0\'d3\'f6\
2.\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'bc\'af\'ba\'cf\'a3\'a8
\f3 Set
\f1 \'a3\'a9\'c0\'b4\'c5\'d0\'b6\'cf\'a3\'ac\'c0\'b4\'d2\'bb\'b4\'ce\'b1\'e9\'c0\'fa\'a3\'ac\'b0\'d1\'cb\'f9\'d3\'d0
\f3 node
\f1 \'cc\'ed\'bc\'d3\'b5\'bd\'bc\'af\'ba\'cf\'d6\'d0\'a3\'ac\'c8\'e7\'b9\'fb\'d3\'d0\'d6\'d8\'b8\'b4\'a3\'ac\'d4\'f2\'bf\'cf\'b6\'a8\'d2\'aa\'d3\'d0\'bb\'b7\
\pard\pardeftab720\partightenfactor0

\fs30 \cf4 \
\pard\pardeftab720\sa280\partightenfactor0

\f6\b\fs28 \cf9 \cb1 6
\f0 \cf2 \cb3 \'a1\'a2
\f6 \cf9 \cb1 25
\f7 \'c6\'a5\'c2\'ed\'a3\'ac\'cf\'d6\'d3\'d0
\f6 5
\f7 \'cc\'f5\'c5\'dc\'b5\'c0\'a3\'ac\'c3\'bb\'d3\'d0\'bc\'c6\'ca\'b1\'c6\'f7\'a3\'ac\'d2\'aa\'d5\'d2\'b3\'f6\'d7\'ee\'bf\'ec
\f6 3
\f7 \'c6\'a5\'c2\'ed\'a3\'ac\'d6\'c1\'c9\'d9\'d2\'aa\'c5\'dc\'bc\'b8\'b3\'a1\'a3\'bf
\f6 \cf6 \

\f8\b0 \'d6\'c1\'c9\'d9\'c5\'dc
\f5 7
\f8 \'b3\'a1\'a3\'ac
\f5 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf6 \kerning1\expnd0\expndtw0 {\listtext	1.	}
\f8 \expnd0\expndtw0\kerning0
\'b6\'d4
\f5 25
\f8 \'c6\'a5\'c2\'ed\'cb\'e6\'bb\'fa\'b7\'d6\'b3\'c9
\f5 5
\f8 \'b8\'f6\'d7\'e9\'a3\'a8
\f5 A,B,C,D,E,F),
\f8 \'c3\'bf\'d7\'e9\'c5\'dc\'d2\'bb\'b3\'a1\'a3\'ac\'bc\'c7\'c2\'bc\'c3\'bf\'d2\'bb\'c6\'a5\'c2\'ed\'d4\'da\'b5\'b1\'c7\'b0\'d7\'e9\'d6\'d0\'c3\'fb\'b4\'ce\'a3\'a8\'b5\'da
\f5 1
\f8 \'c3\'fb\'a3\'ac\'b5\'da
\f5 2
\f8 \'c3\'fb\'a3\'ac\'b5\'da
\f5 3
\f8 \'c3\'fb\'a3\'a9\'a3\'a8\'c5\'dc\'c1\'cb\'ce\'e5\'b3\'a1\'a3\'a9
\f5 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2.	}
\f8 \expnd0\expndtw0\kerning0
\'b4\'d3\'b8\'f7\'b8\'f6\'d7\'e9\'d6\'d0\'d1\'a1\'c8\'a1\'c3\'fb\'b4\'ce\'ce\'aa\'b5\'da\'d2\'bb\'c3\'fb\'b5\'c4\'c2\'ed\'d7\'e9\'b3\'c9\'d2\'bb\'d7\'e9\'a3\'ac\'c5\'dc\'d2\'bb\'b3\'a1\'a3\'ac\'bc\'c7\'c2\'bc\'c3\'fb\'b4\'ce\'a3\'a8\'b5\'da\'c1\'f9\'b3\'a1\'a3\'a9\'a3\'ac\'b1\'be\'d7\'e9\'b5\'da
\f5 1
\f8 \'c3\'fb\'d4\'f2\'c8\'b7\'b6\'a8\'c1\'cb
\f5 25
\f8 \'c6\'a5\'c2\'ed\'d6\'d0\'d7\'ee\'bf\'ec\'b5\'c4\'d2\'bb\'c6\'a5\'c2\'ed
\f5 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}
\f8 \expnd0\expndtw0\kerning0
\'d1\'a1\'c8\'a1\'b5\'da\'c1\'f9\'b3\'a1\'d6\'d0\'c3\'fb\'b4\'ce\'ce\'aa\'b5\'da
\f5 1
\f8 \'c3\'fb\'b5\'c4\'cb\'f9\'d4\'da\'d4\'ad\'c0\'b4\'d7\'e9\'c3\'fb\'b4\'ce\'ce\'aa\'b5\'da
\f5 2
\f8 \'a1\'a2
\f5 3
\f8 \'c3\'fb\'c2\'ed\'a3\'ac\'d1\'a1\'c8\'a1\'b5\'da\'c1\'f9\'b3\'a1\'d6\'d0\'c3\'fb\'b4\'ce\'ce\'aa\'b5\'da
\f5 2
\f8 \'c3\'fb\'b5\'c4\'cb\'f9\'d4\'da\'d4\'ad\'c0\'b4\'d7\'e9\'c3\'fb\'b4\'ce\'b5\'da
\f5 1
\f8 \'a1\'a2
\f5 2
\f8 \'c3\'fb\'c2\'ed\'a3\'a8\'cb\'fc\'d7\'d4\'bc\'ba
\f5 +
\f8 \'b5\'da
\f5 2
\f8 \'c3\'fb\'a3\'a9\'a3\'ac\'d1\'a1\'c8\'a1\'b5\'da\'c1\'f9\'b3\'a1\'d6\'d0\'c3\'fb\'b4\'ce\'ce\'aa\'b5\'da
\f5 3
\f8 \'c3\'fb\'cb\'f9\'d4\'da\'d4\'ad\'c0\'b4\'d7\'e9\'c3\'fb\'b4\'ce\'b5\'da
\f5 1
\f8 \'c3\'fb\'b5\'c4\'c2\'ed\'a3\'a8\'cb\'fc\'d7\'d4\'bc\'ba\'a3\'a9\'a3\'ac\'d7\'e9\'b3\'c9\'d2\'bb\'d7\'e9\'a3\'ac\'c5\'dc\'d2\'bb\'b3\'a1\'a3\'ac\'bc\'c7\'c2\'bc\'c3\'fb\'b4\'ce\'a3\'a8\'b5\'da\'c6\'df\'b3\'a1\'a3\'a9\'a3\'ac\'b1\'be\'b3\'a1\'b5\'c4\'b5\'da
\f5 1
\f8 \'a1\'a2
\f5 2
\f8 \'c3\'fb\'be\'cd\'ca\'c7
\f5 25
\f8 \'c6\'a5\'c2\'ed\'d6\'d0\'d7\'ee\'bf\'ec\'b5\'c4\'b5\'da
\f5 2
\f8 \'a1\'a2
\f5 3
\f8 \'c3\'fb\
\pard\pardeftab720\sa280\partightenfactor0

\f6\b \cf9 \cb10 7
\f0 \'a1\'a2
\f6 8
\f7 \'c6\'bf\'d2\'ba\'cc\'e5\'a3\'ac\'c6\'e4\'d6\'d0
\f6 1
\f7 \'c6\'bf\'d3\'d0\'b6\'be\'d2\'a9\'a3\'ac\'b6\'be\'d2\'a9
\f6 1
\f7 \'d0\'a1\'ca\'b1\'ba\'f3\'d6\'c1\'cb\'c0\'a3\'ac\'c7\'eb\'ce\'ca\'d7\'ee\'bf\'ec\'d5\'d2\'b3\'f6\'b6\'be\'d2\'a9\'a3\'ac\'d0\'e8\'d2\'aa\'bc\'b8\'d6\'bb\'c0\'cf\'ca\'f3\'a3\'bf
\f6 \cf6 \cb1 \
\pard\pardeftab720\sa240\partightenfactor0

\f5\b0 \cf6 1
\f8 \'d6\'bb\'c0\'cf\'ca\'f3\'bf\'c9\'d2\'d4\'b6\'cf\'b6\'a8
\f5 2
\f8 \'c6\'bf\'d2\'ba\'cc\'e5\'a3\'ac
\f5 2^3=8
\f8 \'a3\'ac\'cb\'f9\'d2\'d4\'d0\'e8\'d2\'aa
\f5 3
\f8 \'d6\'bb\'c0\'cf\'ca\'f3\'bc\'b4\'bf\'c9\'a3\'ac
\f5 \uc0\u8232 
\f8 \'b6\'d4\'d2\'ba\'cc\'e5\'bd\'f8\'d0\'d0\'b1\'e0\'ba\'c5\'a3\'ac
\f5 001
\f8 \'a3\'ac
\f5 010
\f8 \'a3\'ac
\f5 011
\f8 \'a3\'ac
\f5 100
\f8 \'a3\'ac
\f5 101
\f8 \'a3\'ac
\f5 110
\f8 \'a3\'ac
\f5 111\uc0\u8232 
\f8 \'b8\'f8
\f5 1
\f8 \'ba\'c5\'c0\'cf\'ca\'f3\'ce\'b9\'b1\'e0\'c2\'eb\'b8\'f6\'ce\'bb\'ca\'fd\'c9\'cf\'ca\'c7
\f5 1
\f8 \'b5\'c4\'d2\'ba\'cc\'e5\'a3\'a8
\f5 001
\f8 \'a3\'ac
\f5 011
\f8 \'a3\'ac
\f5 101
\f8 \'a3\'ac
\f5 111
\f8 \'a3\'a9\'a3\'ac
\f5 \uc0\u8232 
\f8 \'b8\'f8
\f5 2
\f8 \'ba\'c5\'c0\'cf\'ca\'f3\'ce\'b9\'b1\'e0\'c2\'eb\'ca\'ae\'ce\'bb\'ca\'fd\'c9\'cf\'ca\'c7
\f5 1
\f8 \'b5\'c4\'d2\'ba\'cc\'e5\'a3\'a8
\f5 010
\f8 \'a3\'ac
\f5 011
\f8 \'a3\'ac
\f5 110
\f8 \'a3\'ac
\f5 111
\f8 \'a3\'a9\'a3\'ac
\f5 \uc0\u8232 
\f8 \'b8\'f8
\f5 3
\f8 \'ba\'c5\'c0\'cf\'ca\'f3\'ce\'b9\'b1\'e0\'c2\'eb\'b0\'d9\'ce\'bb\'ca\'fd\'c9\'cf\'ca\'c7
\f5 1
\f8 \'b5\'c4\'d2\'ba\'cc\'e5\'a3\'a8
\f5 100
\f8 \'a3\'ac
\f5 101
\f8 \'a3\'ac
\f5 110
\f8 \'a3\'ac
\f5 111
\f8 \'a3\'a9\'a3\'ac
\f5 \uc0\u8232 1
\f8 \'d0\'a1\'ca\'b1\'ba\'f3\'a3\'ac
\f5 \uc0\u8232 
\f8 \'c8\'e7\'b9\'fb\'c0\'cf\'ca\'f3\'c8\'ab\'bb\'ee
\f5 , 8
\f8 \'ba\'c5\'d2\'ba\'cc\'e5\'d3\'d0\'b6\'be\'a3\'ac
\f5 \uc0\u8232 
\f8 \'c8\'e7\'b9\'fb\'c8\'ab\'b6\'bc\'cb\'c0\'a3\'ac
\f5 7
\f8 \'ba\'c5\'d2\'ba\'cc\'e5\'d3\'d0\'b6\'be\'a3\'ac
\f5 \uc0\u8232 
\f8 \'c8\'e7\'b9\'fb
\f5 1
\f8 \'ba\'c5\'cb\'c0\'a3\'ac
\f5 2
\f8 \'a3\'ac
\f5 3
\f8 \'bb\'ee\'a3\'ac
\f5  1
\f8 \'ba\'c5\'d2\'ba\'cc\'e5\'d3\'d0\'b6\'be
\f5 \uc0\u8232 
\f8 \'c8\'e7\'b9\'fb
\f5 2
\f8 \'ba\'c5\'cb\'c0\'a3\'ac
\f5  1
\f8 \'a3\'ac
\f5 3
\f8 \'bb\'ee\'a3\'ac
\f5 2
\f8 \'ba\'c5\'d2\'ba\'cc\'e5\'d3\'d0\'b6\'be
\f5 \uc0\u8232 
\f8 \'c8\'e7\'b9\'fb
\f5 3
\f8 \'ba\'c5\'cb\'c0\'a3\'ac
\f5 1
\f8 \'a3\'ac
\f5 2
\f8 \'bb\'ee\'a3\'ac
\f5  4
\f8 \'ba\'c5\'d2\'ba\'cc\'e5\'d3\'d0\'b6\'be
\f5 \uc0\u8232 
\f8 \'c8\'e7\'b9\'fb
\f5 1
\f8 \'a3\'ac
\f5 2
\f8 \'ba\'c5\'cb\'c0\'a3\'ac
\f5 3
\f8 \'bb\'ee\'a3\'ac
\f5  3
\f8 \'ba\'c5\'d2\'ba\'cc\'e5\'d3\'d0\'b6\'be
\f5 \uc0\u8232 
\f8 \'c8\'e7\'b9\'fb
\f5 1
\f8 \'a3\'ac
\f5 3
\f8 \'ba\'c5\'cb\'c0\'a3\'ac
\f5 2
\f8 \'bb\'ee\'a3\'ac
\f5  5
\f8 \'ba\'c5\'d2\'ba\'cc\'e5\'d3\'d0\'b6\'be
\f5 \uc0\u8232 
\f8 \'c8\'e7\'b9\'fb
\f5 2
\f8 \'a3\'ac
\f5 3
\f8 \'ba\'c5\'cb\'c0\'a3\'ac
\f5 1
\f8 \'bb\'ee\'a3\'ac
\f5  6
\f8 \'ba\'c5\'d2\'ba\'cc\'e5\'d3\'d0\'b6\'be
\f1\fs30 \cf4 \cb3 \
}